// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<div
  className="layout-page"
  id="component-measures"
>
  <HelmetWrapper
    encodeSpecialCharacters={true}
    title="layout.measures"
  />
  <div
    className="layout-page-side-outer"
  >
    <div
      className="layout-page-side"
      style={
        Object {
          "top": 95,
        }
      }
    >
      <div
        className="layout-page-side-inner"
      >
        <div
          className="layout-page-filters"
        >
          <Sidebar
            measures={Array []}
            selectedMetric="coverage"
            updateQuery={[Function]}
          />
        </div>
      </div>
    </div>
  </div>
  <MeasureContent
    className="layout-page-main-inner"
    fetchMeasures={[Function]}
    leakPeriod={null}
    metric={
      Object {
        "domain": "Coverage",
        "key": "coverage",
        "name": "Coverage",
        "type": "PERCENT",
      }
    }
    metrics={
      Object {
        "coverage": Object {
          "domain": "Coverage",
          "key": "coverage",
          "name": "Coverage",
          "type": "PERCENT",
        },
        "duplicated_lines_density": Object {
          "domain": "Duplications",
          "key": "duplicated_lines_density",
          "name": "Duplicated Lines (%)",
          "type": "PERCENT",
        },
        "lines_to_cover": Object {
          "domain": "Coverage",
          "key": "lines_to_cover",
          "name": "Lines to Cover",
          "type": "INT",
        },
        "new_bugs": Object {
          "domain": "Reliability",
          "key": "new_bugs",
          "name": "New Bugs",
          "type": "INT",
        },
      }
    }
    rootComponent={
      Object {
        "key": "foo",
      }
    }
    selected=""
    updateQuery={[Function]}
  />
</div>
`;
